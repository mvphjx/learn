AOP(Aspect Oriented Programing)，即面向切面编程
它主要用于日志记录、性能统计、安全控制、事务处理、异常处理等方面。
它的主要意图就要将日志记录，性能统计，安全控制、事务处理、异常处理等等代码从业务逻辑代码中清楚地划分出来。
通过对这些行为的分离，我们希望可以将它们独立地配置到业务逻辑方法中，而要改变这些行为的时候也不需要影响到业务逻辑方法代码。


代理模式是常用的Java设计模式。
代理类主要负责为委托类预处理消息、过滤信息、把消息转发给委托类，以及事后处理信息等。


深入地理解Java的反射和动态代理机制，同时对Spring中盛行的IOC和AOP的后台实现原理有了更加清晰的理解

InvocationHandler 是代理实例的调用处理程序 实现的接口。 
每个代理实例都具有一个关联的调用处理程序。
对代理实例调用方法时，将对方法调用进行编码并将其指派到它的调用处理程序的 invoke 方法。


